apiVersion: automation.cloudbees.io/v1alpha1
kind: workflow
name: rollback

on:
  workflow_call:
    inputs:
      version:
        type: string
        required: true

jobs:
  apply-schema:
    steps:
      - uses: cloudbees-io/checkout@v1
        name: Get source code
      - name: Test outputs
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          log() {
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
          }

          log "Starting database schema deployment"
          log "Connecting to database server: prod-db-01.internal:5432"
          log "Connected successfully as user: db_deployer"
          log "Current database version: 2.4.1"
          echo ""
          log "Running pre-flight checks..."
          log "✓ Database connection stable"
          log "✓ Sufficient disk space: 245GB available"
          log "✓ No blocking locks detected"
          log "✓ Backup verification passed"
          echo ""
          log "Scanning for migration files..."
          log "Found 3 pending migrations:"
          echo "  - V2.5.0__add_user_preferences_table.sql"
          echo "  - V2.5.0__add_audit_indexes.sql"
          echo "  - V2.5.0__update_user_constraints.sql"
          echo ""
          log "BEGIN TRANSACTION"
          log "Applying migration: V2.5.0__add_user_preferences_table.sql"
          echo "  CREATE TABLE user_preferences ("
          echo "    id BIGSERIAL PRIMARY KEY,"
          echo "    user_id BIGINT NOT NULL,"
          echo "    preference_key VARCHAR(255) NOT NULL,"
          echo "    preference_value TEXT,"
          echo "    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,"
          echo "    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP"
          echo "  )"
          echo "  CREATE INDEX idx_user_preferences_user_id ON user_preferences(user_id)"
          echo "  CREATE UNIQUE INDEX idx_user_preferences_key ON user_preferences(user_id, preference_key)"
          log "Migration applied successfully (1.2s)"
          echo ""
          log "Applying migration: V2.5.0__add_audit_indexes.sql"
          echo "  CREATE INDEX idx_audit_log_timestamp ON audit_log(created_at DESC)"
          echo "  CREATE INDEX idx_audit_log_user_action ON audit_log(user_id, action)"
          log "Migration applied successfully (0.8s)"
          echo ""
          log "Applying migration: V2.5.0__update_user_constraints.sql"
          echo "  ALTER TABLE users ADD CONSTRAINT chk_email_format CHECK (email ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Z|a-z]{2,}$')"
          echo "  ALTER TABLE users ALTER COLUMN last_login SET DEFAULT CURRENT_TIMESTAMP"
          log "Migration applied successfully (0.5s)"
          echo ""
          log "Running post-migration validation..."
          log "✓ All table structures verified"
          log "✓ All indexes created successfully"
          log "✓ All constraints validated"
          log "COMMIT TRANSACTION"
          echo ""
          log "Schema statistics:"
          echo "  - Tables modified: 3"
          echo "  - Indexes created: 4"
          echo "  - Constraints added: 2"
          echo "  - Total execution time: 4.2s"
          log "Database schema deployment completed successfully"

      - name: Register Artifact
        id: reg_build
        uses: cloudbees-io/register-build-artifact@v2
        with:
          name: Changeset
          version: 2.4.1
          commit: d670460b4b4aece5915caf5c68d12f560a9fe3e4
          ref: main
          labels: db
          
      - name: Tagging database
        uses: docker://golang:1.20.3-alpine3.17
        shell: sh
        run: |
          log() {
            echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
          }

          echo ""
          log "Tagging database with version ${{ inputs.version }}"
          log "Updating schema_version table..."
          echo "  INSERT INTO schema_version (version, description, installed_by, installed_on, execution_time, success)"
          echo "  VALUES ('${{ inputs.version }}', 'User preferences and audit improvements', 'db_deployer', '$(date '+%Y-%m-%d %H:%M:%S')', 4200, true)"
          log "Version tag applied successfully"
          log "Current schema version: ${{ inputs.version }}"
          echo ""
          log "Deployment summary:"
          echo "  - Previous version: 2.4.1"
          echo "  - New version: ${{ inputs.version }}"
          echo "  - Migrations applied: 3"
          echo "  - Total duration: 5.8s"
          log "Database deployment completed successfully"
      - name: Publish evidence
        uses: cloudbees-io/publish-evidence-item@v1
        with:
          content: |-
            ## Database Schema Deployment - Success

            ### Deployment Details
            - **Target Database**: prod-db-01.internal:5432
            - **Schema Version**: ${{ inputs.version }}
            - **Previous Version**: 2.4.1
            - **Deployment Time**: $(date '+%Y-%m-%d %H:%M:%S')

            ### Migrations Applied
            1. V2.5.0__add_user_preferences_table.sql (1.2s)
            2. V2.5.0__add_audit_indexes.sql (0.8s)
            3. V2.5.0__update_user_constraints.sql (0.5s)

            ### Database Changes
            - **Tables Modified**: 3
            - **Indexes Created**: 4
            - **Constraints Added**: 2
            - **Total Execution Time**: 4.2s

            ### Validation Results
            - Table structures verified
            - All indexes created successfully
            - All constraints validated
            - Schema version tag applied

            ### Status
            Database schema deployment completed successfully. All pre-flight checks passed and post-migration validation confirmed database integrity.

          format: MARKDOWN
